










































);  FOREIGN KEY (user_id) REFERENCES users(id)  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  status VARCHAR(50) NOT NULL,  payment_method VARCHAR(50),  amount DECIMAL(15,2) NOT NULL,  type VARCHAR(50) NOT NULL,  user_id INT NOT NULL,  id INT PRIMARY KEY AUTO_INCREMENT,CREATE TABLE IF NOT EXISTS transactions (-- Transactions table (if not exists));  FOREIGN KEY (asset_id) REFERENCES assets(id)  FOREIGN KEY (user_id) REFERENCES users(id),  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  average_price DECIMAL(15,2) NOT NULL,  quantity DECIMAL(15,6) NOT NULL DEFAULT 0,  asset_id INT NOT NULL,  user_id INT NOT NULL,  id INT PRIMARY KEY AUTO_INCREMENT,CREATE TABLE IF NOT EXISTS user_assets (-- User assets table (if not exists));  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  price DECIMAL(15,2) NOT NULL,  type VARCHAR(50) NOT NULL,  symbol VARCHAR(50) NOT NULL UNIQUE,  name VARCHAR(255) NOT NULL,  id INT PRIMARY KEY AUTO_INCREMENT,CREATE TABLE IF NOT EXISTS assets (-- Assets table (if not exists));  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  balance DECIMAL(15,2) DEFAULT 0.00,  password VARCHAR(255) NOT NULL,  email VARCHAR(255) NOT NULL UNIQUE,  username VARCHAR(255) NOT NULL UNIQUE,  id INT PRIMARY KEY AUTO_INCREMENT,CREATE TABLE IF NOT EXISTS users (-- Users table (if not exists)